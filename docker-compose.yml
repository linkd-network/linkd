version: '3'
services:
  flyway:
    container_name: migrations
    env_file:
      - .env
    environment:
      - FLYWAY_USER=${POSTGRES_USER}
      - FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
      - FLYWAY_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}
      - FLYWAY_DB=${POSTGRES_DATABASE}
    image: flyway/flyway
    command: -configFiles=/flyway/conf/flyway.config -locations=filesystem:/flyway/sql -connectRetries=60 migrate
    volumes:
      - ${PWD}/db/migrations:/flyway/sql
      - ${PWD}/db/docker-flyway.config:/flyway/conf/flyway.config
    depends_on:
      - postgres
  postgres:
    env_file:
      - .env
    container_name: ${POSTGRES_HOST}
    image: postgres
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
  web:
    container_name: web
    image: web
    build:
      context: ./apps/web
      dockerfile: ./Dockerfile
      args:
        - EXPOSE_PORT=${WEB_PORT}
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    depends_on:
      - mgmt
  mgmt:
    env_file:
      - .env
    environment:
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB=${POSTGRES_DATABASE}
      - API_PORT=${API_PORT}
      - HEDERA_ACCOUNTID=${HEDERA_ACCOUNTID}
      - HEDERA_PUBLICKEY=${HEDERA_PUBLICKEY}
      - HEDERA_PRIVATEKEY=${HEDERA_PRIVATEKEY}
    container_name: mgmt
    image: nestjs-api-dev:1.0.0
    depends_on:
      - postgres
    build:
      context: ./
      target: development
      dockerfile: ./mgmt-Dockerfile
    # command: tail -f /usr/src/app/apps/mgmt/
    ports:
      - ${API_PORT}:${API_PORT}
      - 9229:9229

    volumes:
      - ./apps/mgmt:/mgmt
      - .:/usr/src/app
      - /usr/src/app/node_modules
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
  kafka:
    image: wurstmeister/kafka
    container_name: census-kafka
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: census-kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_BROKER_ID: 1  
